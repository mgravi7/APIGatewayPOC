admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # JWT Authentication Filter
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                keycloak_provider:
                  issuer: http://localhost:8180/realms/api-gateway-poc
                  # audiences removed - will accept tokens without aud claim
                  remote_jwks:
                    http_uri:
                      uri: http://keycloak:8080/realms/api-gateway-poc/protocol/openid-connect/certs
                      cluster: keycloak_cluster
                      timeout: 5s
                    cache_duration:
                      seconds: 300
                  forward: true
                  from_headers:
                  - name: Authorization
                    value_prefix: "Bearer "
              rules:
              # Require JWT for customer service routes
              - match:
                  prefix: /customers
                requires:
                  provider_name: keycloak_provider
              # Require JWT for product service routes
              - match:
                  prefix: /products
                requires:
                  provider_name: keycloak_provider
          # Router filter (must be last)
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              # Customer service routes
              - match:
                  prefix: "/customers"
                route:
                  cluster: customer_service

              # Product service routes
              - match:
                  prefix: "/products"
                route:
                  cluster: product_service

              # Keycloak routes (no auth required for auth endpoints)
              - match:
                  prefix: "/auth"
                route:
                  prefix_rewrite: "/"
                  cluster: keycloak_cluster
                  
  clusters:
  - name: keycloak_cluster
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: keycloak_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: keycloak
                port_value: 8080

  - name: customer_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: customer_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: customer-service
                port_value: 8000

  - name: product_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: product_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: product-service
                port_value: 8000
